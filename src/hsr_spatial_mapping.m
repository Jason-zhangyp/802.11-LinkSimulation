function [Q] = hsr_spatial_mapping(version,type,Ntx,Nsts)


if (Ntx == Nsts)
    Q = eye(Ntx);   % direct mapping
elseif (Ntx ~= Nsts)    % spatial expansion
    k = sqrt(Nsts/Ntx);

    if (Ntx == 2)&&(Nsts == 1)
        D = k*[1;
               1];
    elseif (Ntx == 3)&&(Nsts == 1)
        D = k*[1;
               1;
               1];
    elseif (Ntx == 4)&&(Nsts == 1)
        D = k*[1;
               1;
               1;
               1];
    elseif (Ntx == 5)&&(Nsts == 1);
        D = k*[1;
               1;
               1;
               1;
               1];
    elseif (Ntx == 6)&&(Nsts == 1);
        D = k*[1;
               1;
               1;
               1;
               1;
               1];
    elseif(Ntx == 7)&&(Nsts == 1);
        D = k*[1;
               1;
               1;
               1;
               1;
               1;
               1];
    elseif (Ntx == 8)&&(Nsts == 1);
        D = k*[1;
               1;
               1;
               1;
               1;
               1;
               1;
               1];
    elseif (Ntx == 3)&&(Nsts == 2)
        D = k*[1,0;
               0,1;
               1,0];
    elseif (Ntx == 4)&&(Nsts == 2)
        D = k*[1,0;
               0,1;
               1,0;
               0,1];
    elseif (Ntx == 5)&&(Nsts == 2)
        D = k*[1,0;
               0,1;
               1,0;
               0,1;
               1,0];
    elseif (Ntx == 6)&&(Nsts == 2)
        D = k*[1,0;
               0,1;
               1,0;
               0,1;
               1,0;
               0,1];
    elseif (Ntx == 7)&&(Nsts == 2)
        D = k*[1,0;
               0,1;
               1,0;
               0,1;
               1,0;
               0,1;
               1,0];
    elseif (Ntx == 8)&&(Nsts == 2)
        D = k*[1,0;
               0,1;
               1,0;
               0,1;
               1,0;
               0,1;
               1,0;
               0,1];
    elseif (Ntx == 4)&&(Nsts == 3)
        D = k*[1,0,0;
               0,1,0;
               0,0,1;
               1,0,0];
    elseif (Ntx == 5)&&(Nsts == 3)
        D = k*[1,0,0;
               0,1,0;
               0,0,1;
               1,0,0;
               0,1,0];
    elseif (Ntx == 6)&&(Nsts == 3)
        D = k*[1,0,0;
               0,1,0;
               0,0,1;
               1,0,0;
               0,1,0;
               0,0,1];
    elseif (Ntx == 7)&&(Nsts == 3)
        D = k*[1,0,0;
               0,1,0;
               0,0,1;
               1,0,0;
               0,1,0;
               0,0,1;
               1,0,0];
    elseif (Ntx == 8)&&(Nsts == 3)
        D = k*[1,0,0;
               0,1,0;
               0,0,1;
               1,0,0;
               0,1,0;
               0,0,1;
               1,0,0;
               0,1,0];
    elseif (Ntx == 5)&&(Nsts == 4)
        D = k*[1,0,0,0;
               0,1,0,0;
               0,0,1,0;
               0,0,0,1;
               1,0,0,0];
    elseif (Ntx == 6)&&(Nsts == 4)
        D = k*[1,0,0,0;
               0,1,0,0;
               0,0,1,0;
               0,0,0,1;
               1,0,0,0;
               0,1,0,0];
    elseif (Ntx == 7)&&(Nsts == 4)
        D = k*[1,0,0,0;
               0,1,0,0;
               0,0,1,0;
               0,0,0,1;
               1,0,0,0;
               0,1,0,0;
               0,0,1,0];
    elseif (Ntx == 8)&&(Nsts == 4)
        D = k*[1,0,0,0;
               0,1,0,0;
               0,0,1,0;
               0,0,0,1;
               1,0,0,0;
               0,1,0,0;
               0,0,1,0;
               0,0,0,1];
    elseif (Ntx == 6)&&(Nsts == 5)
        D = k*[1,0,0,0,0;
               0,1,0,0,0;
               0,0,1,0,0;
               0,0,0,1,0;
               0,0,0,0,1;
               1,0,0,0,0];
    elseif (Ntx == 7)&&(Nsts == 5)
        D = k*[1,0,0,0,0;
               0,1,0,0,0;
               0,0,1,0,0;
               0,0,0,1,0;
               0,0,0,0,1;
               1,0,0,0,0];
    elseif (Ntx == 8)&&(Nsts == 5)
        D = k*[1,0,0,0,0;
               0,1,0,0,0;
               0,0,1,0,0;
               0,0,0,1,0;
               0,0,0,0,1;
               1,0,0,0,0;
               0,1,0,0,0];
    elseif (Ntx == 7)&&(Nsts == 6)
        D = k*[1,0,0,0,0,0;
               0,1,0,0,0,0;
               0,0,1,0,0,0;
               0,0,0,1,0,0;
               0,0,0,0,1,0;
               0,0,0,0,0,1;
               1,0,0,0,0,0];
    elseif (Ntx == 8)&&(Nsts == 6)
        D = k*[1,0,0,0,0,0;
               0,1,0,0,0,0;
               0,0,1,0,0,0;
               0,0,0,1,0,0;
               0,0,0,0,1,0;
               0,0,0,0,0,1;
               1,0,0,0,0,0;
               0,1,0,0,0,0];
    elseif (Ntx == 8)&&(Nsts == 7)
        D = k*[1,0,0,0,0,0,0;
               0,1,0,0,0,0,0;
               0,0,1,0,0,0,0;
               0,0,0,1,0,0,0;
               0,0,0,0,1,0,0;
               0,0,0,0,0,1,0;
               0,0,0,0,0,0,1;
               1,0,0,0,0,0,0];
    end
    
    cs = cyclic_shift(version,type,Ntx);
    cs = repmat(cs,[Ntx,1]);
    Q = (1/1e9)*cs*D;
end
end

